<section id="ci" class="slide">
  <div class="vcenter">
    <h1>Continuous Integration</h1>
  </div>
</section>

<section class="slide" id="ci-what-is-it">
  <h2>Continuous Integration</h2>
  <p>The practice of merging all developer working copies with a shared mainline several times a day.</p>
  <ul>
    <li class="slide" id="ci-what-is-it-1">The main aim of CI is to prevent integration problems</li>
    <li class="slide" id="ci-what-is-it-2">It was adopted as part of extreme programming (XP)</li>
    <li class="slide" id="ci-what-is-it-3">Intended to be used in combination with:
      <ul>
        <li class="slide" id="ci-what-is-it-4">automated unit tests</li>
        <li class="slide" id="ci-what-is-it-5">... written through test-driven development</li>
      </ul>
    </li>
    <li class="slide" id="ci-what-is-it-6">Build servers automatically run unit tests after every push to repository and report the results to developers.</li>
  </ul>
</section>

<section class="slide" id="ci-best-parctices">
  <h2>CI Best parctices</h2>
  <ul>
    <li class="slide" id="ci-best-parctices-1">Maintain a code repository</li>
    <li class="slide" id="ci-best-parctices-2">Automate the build</li>
    <li class="slide" id="ci-best-parctices-3">Make the build self-testing</li>
    <li class="slide" id="ci-best-parctices-4">Keep the build fast</li>
    <li class="slide" id="ci-best-parctices-5">Test in a clone of the production environment</li>
    <li class="slide" id="ci-best-parctices-6">Make it easy to get the latest deliveries</li>
    <li class="slide" id="ci-best-parctices-7">Everyone can see the results of the latest build</li>
    <li class="slide" id="ci-best-parctices-8">Automate deployment</li>
  </ul>
</section>

<section class="slide" id="ci-tools">
  <h2>CI Tools</h2>
  <ul>
    <li class="slide" id="ci-tools-1">
      <strong>Bamboo</strong> is a continuous integration server from Atlassian, the makers of JIRA, Confluence and Crowd
    </li>
    <li class="slide" id="ci-tools-2">
      <strong>TeamCity</strong> is a Java-based build management and continuous integration server from JetBrains
    </li>
    <li class="slide" id="ci-tools-3">
      <strong>Team Foundation Server</strong> is a Microsoft product which provides ... swiss knife functionality ..., automated builds, lab management, testing and release management capabilities.
    </li>
    <li class="slide" id="ci-tools-4">
      <strong>Travis CI</strong> is a hosted, distributed continuous integration service used to build and test projects hosted at GitHub.
    </li>
  </ul>
</section>

<section class="slide" id="ci-tools">
  <h2>CI Tools</h2>
  <ul>
    <li class="slide" id="ci-tools-5">
      <strong>Semaphore</strong> is a hosted continuous integration and delivery solution for open source and private projects.
    </li>
    <li class="slide" id="ci-tools-6">
      <strong>CircleCI</strong> gives web developers powerful Continuous Integration and Deployment with easy setup and maintenance.
    </li>
    <li class="slide" id="ci-tools-7">
      <strong>Jenkins</strong> an open source continuous integration tool written in Java. The project was forked from Hudson after a dispute with Oracle.
    </li>
    <li class="slide" id="ci-tools-8">
      <strong>CruiseControl</strong> is a Java-based framework for a continuous build process. ... It allows one to perform a continuous integration of any software development process.
    </li>
  </ul>
</section>

<section class="slide" id="ci-tools-how-it-works">
  <h2>How CI tools built</h2>
  <ul>
    <li class="slide" id="ci-tools-how-it-works-1">Separation of environments</li>
    <li class="slide" id="ci-tools-how-it-works-2">Always start from a clean environment</li>
    <li class="slide" id="ci-tools-how-it-works-3">Use VMs or other means of virtualization</li>
  </ul>
</section>
