<section id="ruby-tools" class="slide">
  <div class="vcenter">
    <h1>Ruby Tools</h1>
  </div>
</section>

<section id="ruby-tools-list" class="slide">
  <h2>Ruby tools for testing</h2>
  <p>The framework-agnostic or just helpful gems. Testing frameworks and everything, we will see in next slides.</p>

  <ul>
    <li><a href="https://github.com/thoughtbot/factory_girl"><strong>FactoryGirl</strong></a> is a fixtures replacement with a straightforward definition syntax, support for multiple build strategies (saved instances, unsaved instances, attribute hashes, and stubbed objects), and support for multiple factories for the same class (user, admin_user, and so on), including factory inheritance.</li>
    <li><a href="http://www.fabricationgem.org/"><strong>Fabricaton</strong></a> is an object generation framework for Ruby.</li>
    <li><a href="https://github.com/EmmanuelOga/ffaker"><strong>FFaker</strong></a> is a rewrite of Faker, a port of Data::Faker from Perl, is used to easily generate fake data: names, addresses, phone numbers, etc.</li>

    <li><a href="https://github.com/DatabaseCleaner/database_cleaner"><strong>Database Cleaner</strong></a> is a set of strategies for cleaning your database in Ruby. The original use case was to ensure a clean state during tests. ActiveRecord, DataMapper, Sequel, MongoMapper, Mongoid, CouchPotato, Ohm and Redis are supported.</li>

    <li><a href="https://github.com/bblimke/webmock"><strong>WebMock</strong></a> is a library for stubbing and setting expectations on HTTP requests in Ruby.</li>
    <li><a href="https://github.com/vcr/vcr"><strong>VCR</strong></a> records test suite's HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.</li>

    <li><a href="https://github.com/jnicklas/capybara"><strong>Capybara</strong></a> helps you test web applications by simulating how a real user would interact with your app. It is agnostic about the driver running your tests and comes with Rack::Test and Selenium support built in. WebKit is supported through an external gem.</li>
    <li><a href="https://github.com/playup/diff_matcher"><strong>DiffMatcher</strong></a> matches input data (eg. from a JSON API) against values, ranges, classes, regexes, procs, custom matchers and/or easily composed, nested combinations thereof to produce an easy to read diff string.</li>
    <li><a href="https://github.com/thoughtbot/shoulda-matchers"><strong>Shoulda Matchers</strong></a> provides Test::Unit- and RSpec-compatible one-liners that test common Rails functionality. These tests would otherwise be much longer, more complex, and error-prone.</li>

    <li><a href="https://github.com/rspec/rspec"><strong>RSpec</strong></a>Behaviour Driven Development for Ruby</li>
    <li><a href="https://github.com/cucumber/cucumber"><strong>Cucumber</strong></a> is a tool for running automated tests written in plain language. Because they're written in plain language, they can be read by anyone on your team.</li>
    <li><a href="https://github.com/zipmark/rspec_api_documentation"><strong>RspecApiDocumentation</strong></a> generates pretty API docs for your Rails APIs.</li>
    <li><a href="https://github.com/tim-vandecasteele/grape-swagger"><strong>The grape-swagger gem</strong></a> provides an autogenerated documentation for your Grape API. The generated documentation is Swagger-compliant, meaning it can easily be discovered in Swagger UI.</li>

    <li><a href="https://github.com/nixme/jazz_hands"><strong>jazz_hands</strong></a> is an opinionated set of console-related gems and a bit of glue...</li>
  </ul>
</section>
